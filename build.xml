<project name="jmatrix" default="compile" basedir=".">
  <property name="java-home" location="/usr/share/java"/>
  <property name="bin" location="bin"/>
  <property name="doc" location="doc"/>
  <property name="src" location="src"/>
  <property name="src.test" location="src-test"/>
  <property name="src.bench" location="src-bench"/>

  <!-- properties -->

  <property name="junit" location="${java-home}/junit4.jar"/>
  <property name="hamcrest" location="${java-home}/hamcrest-core.jar"/>

  <presetdef name="java-compile">
    <javac includeantruntime="false"/>
  </presetdef>

  <tstamp>
    <format property='build.time' pattern='yyyy-MM-dd HH:mm:ss'/>
  </tstamp>

  <available file=".git" type="dir" property="git.present"/>

  <!-- information targets -->

  <target name="git.commit" description="Store git revision in ${git.revision}" if="git.present">
    <exec executable="git" outputproperty="git.commit"
          failifexecutionfails="false" errorproperty="">
      <arg value="describe"/>
      <arg value="--tags"/>
      <arg value="--always"/>
      <arg value="HEAD"/>
    </exec>
    <condition property="git.revision" value="${git.commit}" else="unknown">
      <and>
        <isset property="git.commit"/>
        <length string="${git.commit}" trim="yes" length="0" when="greater"/>
      </and>
    </condition>
  </target>

  <target name="print.info" depends="git.commit">
    <echo>
      Build file   : ${ant.file} 
      Source dir   : ${src}
      Run by/at    : ${user.name} @ ${build.time}
      Java version : ${java.version}
      Git commit   : ${git.commit}
    </echo>
  </target>

  <target name="doc" description="Generate API documentation.">
    <javadoc sourcepath="${src}" destdir="${doc}"/>
  </target>

  <!-- compilation targets -->

  <target name="compile"
          description="Compile the jmatrix package without debug info."
          depends="print.info">
    <java-compile srcdir="${src}/jmatrix" destdir="${bin}"/>
  </target>

  <target name="compile.debug"
          description="Compile the jmatrix package with debug info."
          depends="print.info">
    <java-compile srcdir="${src}/jmatrix" destdir="${bin}" debug="true"/>
  </target>

  <target name="jar"
          description="Building thje jmatrix library jar file."
          depends="compile">
    <jar destfile="jmatrix.jar" basedir="${bin}">
      <exclude name=".keep"/>
      <exclude name="**/test/**"/>
      <exclude name="**/bench/**"/>
      <manifest>
        <attribute name="Version" value="git:${git.revision}"/>
      </manifest>
    </jar>
  </target>

  <!-- test targets -->

  <target name="test.compile"
          description="Compile the test cases."
          depends="compile.debug">
    <mkdir dir="${bin}/test"/>
    <java-compile srcdir="${src.test}/jmatrix" destdir="${bin}/test" debug="true">
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement location="${bin}"/>
        <pathelement location="${junit}"/>
      </classpath>
    </java-compile>
  </target>

  <target name="test.matrix"
          description="Run matrix tests."
          depends="test.compile">
    <java classname="org.junit.runner.JUnitCore" fork="true">
      <arg value="jmatrix.MatrixTests"/>
      <jvmarg value="-ea"/>
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement location="${bin}"/>
        <pathelement location="${bin}/test"/>
        <pathelement location="${junit}"/>
        <pathelement location="${hamcrest}"/>
      </classpath>
    </java>
  </target>

  <target name="test.permutation"
          description="Run permutation tests."
          depends="test.compile">
    <java classname="org.junit.runner.JUnitCore" fork="true">
      <arg value="jmatrix.PermutationTests"/>
      <jvmarg value="-ea"/>
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement location="${bin}"/>
        <pathelement location="${bin}/test"/>
        <pathelement location="${junit}"/>
        <pathelement location="${hamcrest}"/>
      </classpath>
    </java>
  </target>

  <target name="test.examples"
          description="Test the examples."
          depends="test.compile">
    <java classname="org.junit.runner.JUnitCore" fork="true">
      <arg value="jmatrix.example.Examples"/>
      <jvmarg value="-ea"/>
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement location="${bin}"/>
        <pathelement location="${bin}/test"/>
        <pathelement location="${junit}"/>
        <pathelement location="${hamcrest}"/>
      </classpath>
    </java>
  </target>

  <target name="test"
          description="Run all tests."
          depends="test.matrix,test.permutation,test.examples">
  </target>

  <target name="test.single"
          description="Run a given, single test."
          depends="test.compile">
    <property name="testcase" value=""/>
    <java classname="jmatrix.SingleTestRunner" fork="true">
      <arg value="jmatrix.${testcase}"/>
      <jvmarg value="-ea"/>
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement location="${bin}"/>
        <pathelement location="${bin}/test"/>
        <pathelement location="${junit}"/>
        <pathelement location="${hamcrest}"/>
      </classpath>
    </java>
  </target>

  <!-- benchmark targets -->

  <target name="bench.compile"
          description="Compile the benchmarks."
          depends="compile">
    <mkdir dir="${bin}/bench"/>
    <java-compile srcdir="${src.bench}/jmatrix/bench" destdir="${bin}/bench">
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement location="${bin}"/>
      </classpath>
    </java-compile>
  </target>

  <target name="bench"
          description="Run benchmarks."
          depends="bench.compile">
    <property name="seed" value=""/>
    <property name="benchmarks" value=""/>
    <property name="debug" value=""/>
    <java classname="jmatrix.bench.BenchmarkRunner">
      <arg value="${seed}"/>
      <arg value="${benchmarks}"/>
      <arg value="${debug}"/>
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement location="${bin}"/>
        <pathelement location="${bin}/bench"/>
        <pathelement location="${junit}"/>
        <pathelement location="${hamcrest}"/>
      </classpath>
    </java>
  </target>

  <!-- cleaning targets -->

  <target name="clean" description="Delete class files.">
    <delete dir="${bin}/jmatrix"/>
    <delete dir="${bin}/bench"/>
    <delete dir="${bin}/test"/>
    <delete includeemptydirs="true">
      <fileset dir="${doc}" includes="*.html"/>
      <fileset dir="${doc}" includes="*.css"/>
      <fileset dir="${doc}" includes="package-list"/>
      <fileset dir="${doc}/jmatrix" erroronmissingdir="false"/>
      <fileset dir="${doc}/resources" erroronmissingdir="false"/>
    </delete>
  </target>
</project>
